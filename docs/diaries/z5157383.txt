Week 1:
Met my group for the first time and coordinated our calenders to set up regular meeting times. 
Researched each of the project proposals and agreed with my group to work on the "ultraCast" project. 
Decided on (coarse) roles for group members, I will be a backend dev.
Began researching the tech. stack that will be used for the backend, currently the best option looks to be flask+mongodb with a graphql interface for the frontend.

Week 2:

Held in-depth discussions with the group to decide on:
    - Novel features of the product
    - Key user functionalities
    - Tech stack that will be used

This week, to prepare the proposal, I will be creating flow diagrams of backend functionality.

Week 3:

This week, I focused on finishing up the project proposal. I created some tables comparing our proposed solution to existing solutions. I also formatted the document in Latex and proofread it.
Besides this, I designed a basic implementation of our mongodb database schema this week.

Week 4:

This week, I refined the mongodb database schema designed in week 3 and created graphql queries and mutations for the database.
This took much more time than expected because of the number of libraries involved and the lack of documentation for some libraries 
(looking at you graphene_mongo!)
I also setup the graphql multi-part upload spec to allow clients to upload podcasts to the database.

Week 5:

My main goal for this week is to implement user authentication in the backend properly.
This has proved somewhat challenging because of our unusual software stack (there are no online examples).
I also set up an integration testing framework for the backend and wrote up tests for the existing graphql queries and mutations from last week.

Week 6:

This week my main goal was to set up a search API for the frontend to use.
On Dan's recommendation I used an external API, Algolia to simplify this.
I created scripts to sync our database with Algolia to allow the frontend to search.
I also created backend functionalities to implement more user stories (marking podcasts as listened to, new episodes from subscribed podcasts...)

Week 7:

This week I focused on the backend deployment. This involved setting up gunicorn (a production WSGI server) to serve our flask app with multiple worker processes.
I also tested the deployment on Vlab to ensure it will work during the demo.

Week 8: 

This week I focused on improving the perfomance of the backend. We had an issue where some queries took a long long time (circa 40s).
I dug into this issue and found a solution (moving the backend webserver to the same EC2 instance as the database).
Besides this, I also made some new backend functionalities for the Streams user story.

Week 9:

This week I am focusing on begining the report. I plan to write out some of the challenges that have been faced and the introduction.
I have also written the backend functionalities to allow searches to be saved for the recommendation engine.
